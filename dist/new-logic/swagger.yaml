openapi: 3.0.1
info:
  title: Steam API
  description: API для работы с Steam
  version: 1.0.0
servers:
  - url: https://steamcommunity.com
tags:
  - name: Object
    description: Апи для работы с предметами
  - name: Lots
    description: Апи для работы с лотами
paths:
  /object/list:
    get:
      tags:
        - Object
      summary: Получить список предметов
      description: Возвращает список предметов пользователя по его айди из куки
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/ObjectsResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /object/{objectId}:
    get:
      tags:
        - Object
      summary: Получить предмет
      description: Возвращает предмет по айди
      parameters:
        - in: path
          name: objectId
          schema:
            type: string
          required: true
          description: Айди предмета
          example: 4543435452354
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/ObjectsResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /object/buy:
    post:
      tags:
        - Object
      summary: Купить предмет
      description: Возвращает предмет по айди
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/ObjectId'
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/ObjectsResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/create:
    post:
      tags:
        - Lots
      summary: Оценить объявления
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/LotCreate'
      responses:
        '200':
          description: Создание прошло успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/list:
    get:
      tags:
        - Lots
      summary: Получить список лотов
      description: Возвращает список лотов пользователя по его айди из куки
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/LotResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/{lotId}:
    get:
      tags:
        - Lots
      summary: Получить лот
      description: Возвращает информацию об одно лоте 
      parameters:
        - in: path
          name: lotId
          schema:
            type: string
          required: true
          description: Айди лота
          example: 4543435452354
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/LotResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/history:
    get:
      tags:
        - Lots
      summary: Получить историю лотов
      description: Возвращает информацию истории лотов (операции) 
      responses:
        '200':
          description: Запрос прошел успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/LotHistory'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/confirm:
    post:
      tags:
        - Lots
      summary: Подтвердить создание лота
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/LotCreate'
      responses:
        '200':
          description: Создание прошло успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/{lotId}/update:
    patch:
      tags:
        - Lots
      summary: Изменить цену лота
      parameters:
        - in: path
          name: lotId
          schema:
            type: string
          required: true
          description: Айди лота
          example: 4543435452354
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/LotUpdate'
      responses:
        '200':
          description: Изменение прошло успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
  /lots/{lotId}/delete:
    delete:
      tags:
        - Lots
      summary: Удалить лот
      parameters:
        - in: path
          name: lotId
          schema:
            type: string
          required: true
          description: Айди лота
          example: 4543435452354
      responses:
        '200':
          description: Удаление прошло успешно
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '400':
          description: Неверные параметры запроса
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
        '403':
          description: Не прошла авторизация
          content:
            application/json; charset=utf-8: 
              schema:
                $ref: '#/components/schemas/CommonResponse'
components:
  schemas:
    ObjectId:
      required:
        - objectId
      type: object
      properties:
        objectId:
          type: string
          description: Айди предмета
    LotCreate:
      required:
        - objectId
        - price
      type: object
      properties:
        objectId:
          type: string
          description: Айди предмета
        price:
          type: integer
          description: Цена предмета
    LotUpdate:
      required:
        - price
      type: object
      properties:
        price:
          type: integer
          description: Цена предмета
    LotResponse:
      required:
        - price
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              price:
                type: number
              onjectId:
                type: string
        totalCount:
          type: number
        statusCode:
          type: number
          example: 200
        error:
          type: string
          example: "Error!"
    ObjectsResponse:
      required:
        - price
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              image:
                type: string
              title:
                type: string
              description:
                type: string
              gameId: 
                type: string
                description: Предмет привязан к игре
        totalCount:
          type: number
        statusCode:
          type: number
          example: 200
        error:
          type: string
          example: "Error!"
    LotHistory:
      required:
        - price
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              lot:
                type: object
                properties:
                  price: 
                    type: number
                  onjectId:
                    type: number
              atcion:
                type: string
              description:
                type: string
              date:
                type: string
        totalCount:
          type: number
        statusCode:
          type: number
          example: 200
        error:
          type: string
          example: "Error!"
    CommonResponse:
      type: object
      required:
        - success
      properties:
        statusCode:
          type: number
          example: 200
        error:
          type: string
          example: "Error!"

  securitySchemes:
    timezoneOffset:
      type: apiKey
      in: cookie
      name: timezoneOffset
    cookieSettings:
      type: apiKey
      in: cookie
      name: cookieSettings
    browserid:
      type: apiKey
      in: cookie
      name: browserid
    steamCountry:
      type: apiKey
      in: cookie
      name: steamCountry
    steamLoginSecure:
      description: JWT Токен пользователя
      type: apiKey 
      in: cookie
      name: steamLoginSecure
    strInventoryLastContext:
      type: apiKey
      in: cookie
      name: strInventoryLastContext
    sessionid:
      type: apiKey
      in: header
      name: sessionid
    cookie:
      type: apiKey
      in: header
      name: Cookie

security:
  - timezoneOffset: []
  - cookieSettings: []
  - browserid: []
  - steamCountry: []
  - steamLoginSecure: []
  - strInventoryLastContext: []
  - sessionid: []
  - cookie: []